window.Events=function(e){void 0!==e&&void 0!==e.workerCallInterval&&"number"==typeof e.workerCallInterval?this.workerCallInterval=e.workerCallInterval:this.workerCallInterval=11;var t=this;this.taskStorage=[],this.descriptionsEventsStorage={},this.workerState={activated:!1},this.worker=function(){if(!1===t.workerState.activated){t.workerState.activated=!0;var e=setInterval((function(){0===t.taskStorage.length&&(t.workerState.activated=!1,clearInterval(e));for(var o=0;o<t.taskStorage.length;o++){var r=t.taskStorage[o],n=r[0],a=r[1],i=r[2].activated,s=r[2].remove,c=r[2].once;"function"!=typeof t.descriptionsEventsStorage[n]&&t.taskStorage.splice(o,1),"function"==typeof t.descriptionsEventsStorage[n]&&!0===t.descriptionsEventsStorage[n]()&&!1===i&&(a(),t.taskStorage[o][2].activated=!0),!0===s&&t.taskStorage.splice(o,1),!0===c&&!0===i&&t.taskStorage.splice(o,1),!0===i&&!1===t.descriptionsEventsStorage[n]()&&(t.taskStorage[o][2].activated=!1)}}),t.workerCallInterval)}},this.addMarkerInTask=function(e,o,r){for(var n=0;n<t.taskStorage.length;n++)t.taskStorage[n][0]===e&&t.taskStorage[n][1]===o&&(t.taskStorage[n][2][r.name]=r.value)},this.dispatcher=function(e,o,r,n){if(void 0===t.descriptionsEventsStorage[e])throw new Error('No "'+e+'" event found first describe it through the .add(...) method ');"addTask"===r&&void 0!==t.descriptionsEventsStorage[e]&&(t.taskStorage.push([e,o,{activated:!1,remove:!1,once:n}]),t.worker()),"removeTask"===r&&void 0!==t.descriptionsEventsStorage[e]&&t.addMarkerInTask(e,o,{name:"remove",value:!0})},this.on=function(e,o,r){if("string"!=typeof e||"function"!=typeof o||"boolean"!=typeof r&&void 0!==r){if("string"!=typeof e||"function"!=typeof o||"boolean"!=typeof r||void 0!==r)throw new Error("Error adding listener. Scheme .on(string: eventName, function: callback, boolean: onceMode | undefined: onceMode )")}else t.dispatcher(e,o,"addTask",r)},this.off=function(e,o){if("string"==typeof e&&"function"==typeof o)t.dispatcher(e,o,"removeTask");else if("string"!=typeof e||"function"!=typeof o)throw new Error("Error remove listener. Scheme .off(string: eventName, function: callback)")},this.add=function(e){if("object"!=typeof e)throw new Error("Incorrect event description, description is not an object.");Object.keys(e).forEach((function(o){if("function"!=typeof e[o])throw new Error("The description of the event with the name"+o+" was created incorrectly, the key value is not a function.");t.descriptionsEventsStorage[o]=e[o]}))},this.remove=function(e){void 0!==t.descriptionsEventsStorage[e]&&"string"==typeof e&&delete t.descriptionsEventsStorage[e]}};